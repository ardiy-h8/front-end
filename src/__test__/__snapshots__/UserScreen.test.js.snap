// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`marker generator should render button 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <UserScreen />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Header />,
        <div
          style={
                    Object {
                              "display": "flex",
                              "flexDirection": "column",
                              "flexWrap": "wrap",
                              "marginTop": 56,
                              "padding": "2em",
                            }
          }
>
          <TextField
                    fullWidth={true}
                    helperText="ex: Your Title"
                    id="title"
                    label="Title"
                    margin="normal"
                    required={false}
                    select={false}
          />
          <TextField
                    fullWidth={true}
                    helperText="ex: Description Detail"
                    id="detail"
                    label="Detail"
                    margin="normal"
                    required={false}
                    select={false}
          />
          <input
                    accept="image/*"
                    id="marker"
                    name="marker"
                    onChange={[Function]}
                    style={
                              Object {
                                        "display": "none",
                                      }
                    }
                    type="file"
          />
          <label
                    htmlFor="marker"
          >
                    <WithStyles(Button)
                              component="span"
                              syle={
                                        Object {
                                                  "padding": "0.75em",
                                                }
                              }
                              variant="raised"
                    >
                              Marker Upload
                    </WithStyles(Button)>
          </label>
          <input
                    id="object"
                    placeholder="object"
                    style={
                              Object {
                                        "display": "none",
                                      }
                    }
                    type="file"
          />
          <label
                    htmlFor="object"
          >
                    <br />
                    <WithStyles(Button)
                              component="span"
                              syle={
                                        Object {
                                                  "padding": "0.75em",
                                                }
                              }
                              variant="raised"
                    >
                              Object Upload
                    </WithStyles(Button)>
          </label>
          <div>
                    <br />
                    <WithStyles(Button)
                              color="primary"
                              component="span"
                              syle={
                                        Object {
                                                  "padding": "0.75em",
                                                }
                              }
                              variant="raised"
                    >
                              Save
                    </WithStyles(Button)>
                    
          </div>
</div>,
        <Navigation />,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <TextField
              fullWidth={true}
              helperText="ex: Your Title"
              id="title"
              label="Title"
              margin="normal"
              required={false}
              select={false}
/>,
            <TextField
              fullWidth={true}
              helperText="ex: Description Detail"
              id="detail"
              label="Detail"
              margin="normal"
              required={false}
              select={false}
/>,
            <input
              accept="image/*"
              id="marker"
              name="marker"
              onChange={[Function]}
              style={
                            Object {
                                          "display": "none",
                                        }
              }
              type="file"
/>,
            <label
              htmlFor="marker"
>
              <WithStyles(Button)
                            component="span"
                            syle={
                                          Object {
                                                        "padding": "0.75em",
                                                      }
                            }
                            variant="raised"
              >
                            Marker Upload
              </WithStyles(Button)>
</label>,
            <input
              id="object"
              placeholder="object"
              style={
                            Object {
                                          "display": "none",
                                        }
              }
              type="file"
/>,
            <label
              htmlFor="object"
>
              <br />
              <WithStyles(Button)
                            component="span"
                            syle={
                                          Object {
                                                        "padding": "0.75em",
                                                      }
                            }
                            variant="raised"
              >
                            Object Upload
              </WithStyles(Button)>
</label>,
            <div>
              <br />
              <WithStyles(Button)
                            color="primary"
                            component="span"
                            syle={
                                          Object {
                                                        "padding": "0.75em",
                                                      }
                            }
                            variant="raised"
              >
                            Save
              </WithStyles(Button)>
              
</div>,
          ],
          "style": Object {
            "display": "flex",
            "flexDirection": "column",
            "flexWrap": "wrap",
            "marginTop": 56,
            "padding": "2em",
          },
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "fullWidth": true,
              "helperText": "ex: Your Title",
              "id": "title",
              "label": "Title",
              "margin": "normal",
              "required": false,
              "select": false,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "fullWidth": true,
              "helperText": "ex: Description Detail",
              "id": "detail",
              "label": "Detail",
              "margin": "normal",
              "required": false,
              "select": false,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "accept": "image/*",
              "id": "marker",
              "name": "marker",
              "onChange": [Function],
              "style": Object {
                "display": "none",
              },
              "type": "file",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <WithStyles(Button)
                component="span"
                syle={
                                Object {
                                                "padding": "0.75em",
                                              }
                }
                variant="raised"
>
                Marker Upload
</WithStyles(Button)>,
              "htmlFor": "marker",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Marker Upload",
                "component": "span",
                "syle": Object {
                  "padding": "0.75em",
                },
                "variant": "raised",
              },
              "ref": null,
              "rendered": "Marker Upload",
              "type": [Function],
            },
            "type": "label",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "id": "object",
              "placeholder": "object",
              "style": Object {
                "display": "none",
              },
              "type": "file",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <br />,
                <WithStyles(Button)
                  component="span"
                  syle={
                                    Object {
                                                      "padding": "0.75em",
                                                    }
                  }
                  variant="raised"
>
                  Object Upload
</WithStyles(Button)>,
              ],
              "htmlFor": "object",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": "br",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Object Upload",
                  "component": "span",
                  "syle": Object {
                    "padding": "0.75em",
                  },
                  "variant": "raised",
                },
                "ref": null,
                "rendered": "Object Upload",
                "type": [Function],
              },
            ],
            "type": "label",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <br />,
                <WithStyles(Button)
                  color="primary"
                  component="span"
                  syle={
                                    Object {
                                                      "padding": "0.75em",
                                                    }
                  }
                  variant="raised"
>
                  Save
</WithStyles(Button)>,
                "",
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": "br",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Save",
                  "color": "primary",
                  "component": "span",
                  "syle": Object {
                    "padding": "0.75em",
                  },
                  "variant": "raised",
                },
                "ref": null,
                "rendered": "Save",
                "type": [Function],
              },
              "",
            ],
            "type": "div",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Header />,
          <div
            style={
                        Object {
                                    "display": "flex",
                                    "flexDirection": "column",
                                    "flexWrap": "wrap",
                                    "marginTop": 56,
                                    "padding": "2em",
                                  }
            }
>
            <TextField
                        fullWidth={true}
                        helperText="ex: Your Title"
                        id="title"
                        label="Title"
                        margin="normal"
                        required={false}
                        select={false}
            />
            <TextField
                        fullWidth={true}
                        helperText="ex: Description Detail"
                        id="detail"
                        label="Detail"
                        margin="normal"
                        required={false}
                        select={false}
            />
            <input
                        accept="image/*"
                        id="marker"
                        name="marker"
                        onChange={[Function]}
                        style={
                                    Object {
                                                "display": "none",
                                              }
                        }
                        type="file"
            />
            <label
                        htmlFor="marker"
            >
                        <WithStyles(Button)
                                    component="span"
                                    syle={
                                                Object {
                                                            "padding": "0.75em",
                                                          }
                                    }
                                    variant="raised"
                        >
                                    Marker Upload
                        </WithStyles(Button)>
            </label>
            <input
                        id="object"
                        placeholder="object"
                        style={
                                    Object {
                                                "display": "none",
                                              }
                        }
                        type="file"
            />
            <label
                        htmlFor="object"
            >
                        <br />
                        <WithStyles(Button)
                                    component="span"
                                    syle={
                                                Object {
                                                            "padding": "0.75em",
                                                          }
                                    }
                                    variant="raised"
                        >
                                    Object Upload
                        </WithStyles(Button)>
            </label>
            <div>
                        <br />
                        <WithStyles(Button)
                                    color="primary"
                                    component="span"
                                    syle={
                                                Object {
                                                            "padding": "0.75em",
                                                          }
                                    }
                                    variant="raised"
                        >
                                    Save
                        </WithStyles(Button)>
                        
            </div>
</div>,
          <Navigation />,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <TextField
                fullWidth={true}
                helperText="ex: Your Title"
                id="title"
                label="Title"
                margin="normal"
                required={false}
                select={false}
/>,
              <TextField
                fullWidth={true}
                helperText="ex: Description Detail"
                id="detail"
                label="Detail"
                margin="normal"
                required={false}
                select={false}
/>,
              <input
                accept="image/*"
                id="marker"
                name="marker"
                onChange={[Function]}
                style={
                                Object {
                                                "display": "none",
                                              }
                }
                type="file"
/>,
              <label
                htmlFor="marker"
>
                <WithStyles(Button)
                                component="span"
                                syle={
                                                Object {
                                                                "padding": "0.75em",
                                                              }
                                }
                                variant="raised"
                >
                                Marker Upload
                </WithStyles(Button)>
</label>,
              <input
                id="object"
                placeholder="object"
                style={
                                Object {
                                                "display": "none",
                                              }
                }
                type="file"
/>,
              <label
                htmlFor="object"
>
                <br />
                <WithStyles(Button)
                                component="span"
                                syle={
                                                Object {
                                                                "padding": "0.75em",
                                                              }
                                }
                                variant="raised"
                >
                                Object Upload
                </WithStyles(Button)>
</label>,
              <div>
                <br />
                <WithStyles(Button)
                                color="primary"
                                component="span"
                                syle={
                                                Object {
                                                                "padding": "0.75em",
                                                              }
                                }
                                variant="raised"
                >
                                Save
                </WithStyles(Button)>
                
</div>,
            ],
            "style": Object {
              "display": "flex",
              "flexDirection": "column",
              "flexWrap": "wrap",
              "marginTop": 56,
              "padding": "2em",
            },
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "fullWidth": true,
                "helperText": "ex: Your Title",
                "id": "title",
                "label": "Title",
                "margin": "normal",
                "required": false,
                "select": false,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "fullWidth": true,
                "helperText": "ex: Description Detail",
                "id": "detail",
                "label": "Detail",
                "margin": "normal",
                "required": false,
                "select": false,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "accept": "image/*",
                "id": "marker",
                "name": "marker",
                "onChange": [Function],
                "style": Object {
                  "display": "none",
                },
                "type": "file",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <WithStyles(Button)
                  component="span"
                  syle={
                                    Object {
                                                      "padding": "0.75em",
                                                    }
                  }
                  variant="raised"
>
                  Marker Upload
</WithStyles(Button)>,
                "htmlFor": "marker",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Marker Upload",
                  "component": "span",
                  "syle": Object {
                    "padding": "0.75em",
                  },
                  "variant": "raised",
                },
                "ref": null,
                "rendered": "Marker Upload",
                "type": [Function],
              },
              "type": "label",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "id": "object",
                "placeholder": "object",
                "style": Object {
                  "display": "none",
                },
                "type": "file",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <br />,
                  <WithStyles(Button)
                    component="span"
                    syle={
                                        Object {
                                                            "padding": "0.75em",
                                                          }
                    }
                    variant="raised"
>
                    Object Upload
</WithStyles(Button)>,
                ],
                "htmlFor": "object",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": "br",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Object Upload",
                    "component": "span",
                    "syle": Object {
                      "padding": "0.75em",
                    },
                    "variant": "raised",
                  },
                  "ref": null,
                  "rendered": "Object Upload",
                  "type": [Function],
                },
              ],
              "type": "label",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <br />,
                  <WithStyles(Button)
                    color="primary"
                    component="span"
                    syle={
                                        Object {
                                                            "padding": "0.75em",
                                                          }
                    }
                    variant="raised"
>
                    Save
</WithStyles(Button)>,
                  "",
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": "br",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Save",
                    "color": "primary",
                    "component": "span",
                    "syle": Object {
                      "padding": "0.75em",
                    },
                    "variant": "raised",
                  },
                  "ref": null,
                  "rendered": "Save",
                  "type": [Function],
                },
                "",
              ],
              "type": "div",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
